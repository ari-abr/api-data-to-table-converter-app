{"version":3,"sources":["components/DisplayResults.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayResults","props","state","originalResults","results","result","this","length","console","log","headingsList","listHeadings","property","push","unshift","map","item","className","onClick","sortBodies","type","id","search","String","Math","random","listResults","i","resultsList","property1","myResult","myResult2","Array","isArray","myResult1","property2","el","JSON","stringify","join","replaceAll","triggerWord","substr","trigger","myItem","mySortingOption","item1","item2","option","sortingOption","bodies1","bodies2","smallIndex","j","charAt","Object","keys","keys1","keys2","prop1","prop2","temp","setState","textArr","textRow","text","link","document","createElement","setAttribute","encodeURI","style","display","body","appendChild","click","removeChild","myProperty","query","getElementById","value","searchResultsList","includes","innerHTML","convertToText","refresh","makeHeadings","makeResults","Component","App","apiUrl","querySelector","fetch","then","response","json","findResultsArray","catch","error","alert","myObject","bigObject","propCount","biggestArray1","thisArray1","myArray1","thisArray","biggestArray","select","execCommand","cols","rows","readOnly","copyLinkText","getResults","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8ba2eff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Collapsible from 'react-collapsible';\r\n\r\nclass  DisplayResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      originalResults: this.props.results,\r\n      results: this.props.results\r\n    };\r\n  }\r\n\r\n  /*1) Pushes the name of each property of the first results item into Array A\r\n    2) Array B now renders each item of Array A as headings */\r\n  makeHeadings() {\r\n    var result = this.state.results;\r\n    if (result.length) {\r\n      console.log(result)\r\n      var headingsList = [];\r\n      var listHeadings = [];\r\n      for (var property in result[0]) {\r\n        headingsList.push(property);\r\n      }\r\n      headingsList.unshift(`#`);\r\n      listHeadings = headingsList.map((item) => (\r\n        <th className=\"results-tr\" key={Math.random()}>\r\n          <div className=\"sorting-buttons\">\r\n          <p>{item}</p>\r\n          <div className=\"sorting-buttons-column\">\r\n            <button onClick={() => this.sortBodies(item, 'increase')}>\r\n              <i className=\"fas fa-chevron-up\"></i>\r\n            </button>\r\n            <button onClick={() => this.sortBodies(item, 'decrease')}>\r\n              <i className=\"fas fa-chevron-down\"></i>\r\n            </button>\r\n          </div>\r\n          </div>\r\n          <div className=\"small-search-form\">\r\n          <form>\r\n          <input type=\"text\" className='input-search' id={item}></input>\r\n        </form>\r\n        <button  onClick={()=> this.search(`${item}`)}><i className=\"fas fa-search\"></i></button>\r\n        </div>\r\n        <div id={String(item)+\"err\"}></div>\r\n        </th>\r\n      ));\r\n      listHeadings[0] = <th className=\"results-tr\" key={Math.random()}>\r\n      <p>#</p></th>\r\n      return <tr>{listHeadings}</tr>;\r\n    }else{\r\n      return <tr key={Math.random()}><td key={Math.random()}>Results not found</td></tr>\r\n    }\r\n  }\r\n\r\n  /*1) Pushes the name of each property of the first results item into Array A\r\n    2) Array B now renders each item of Array A as headings */\r\n  makeResults() {\r\n    var result = this.state.results;\r\n    var listResults = [];\r\n    if (result) {\r\n      for (var i = 0; i < result.length; i++) {\r\n        var resultsList = [];\r\n        resultsList.push(<td key={Math.random()}>{i + 1}</td>);\r\n        for (var property1 in result[i]) {\r\n          var myResult;\r\n          if (Array.isArray(result[i][property1])) {\r\n            var myResult1 = [];\r\n            for (var property2 in result[i][property1]) {\r\n              var el = JSON.stringify(result[i][property1][property2]);\r\n              myResult1.push(el);\r\n            }\r\n            myResult = myResult1\r\n              .join(`\\n`)\r\n              .replaceAll('{', '')\r\n              .replaceAll('}', '')\r\n              .replaceAll('\"', ' ')\r\n              .replaceAll(',', '\\n')\r\n              .replaceAll('_', ' ');\r\n          } else if (\r\n            Array.isArray(result[i][property1]) === false &&\r\n            result[i][property1] !== null &&\r\n            result[i][property1] !== ''\r\n          ) {\r\n            var myResult3 = String(JSON.stringify(result[i][property1]));\r\n            myResult = myResult3\r\n              .replaceAll('\"', ' ')\r\n              .replaceAll('{', '')\r\n              .replaceAll('}', '');\r\n          } else if (\r\n            result[i][property1] === null ||\r\n            result[i][property1] === 'undefined' ||\r\n            result[i][property1] === ''\r\n          ) {\r\n            myResult = '---';\r\n          }\r\n          var end = myResult.length;\r\n          var myResult2;\r\n          if (end > 40) {\r\n            var triggerWord = myResult.substr(0, 15) + '...';\r\n            myResult2 = (\r\n              <Collapsible className=\"collapsible\" trigger={triggerWord}>\r\n                ${myResult}\r\n              </Collapsible>\r\n            );\r\n          } else {\r\n            myResult2 = myResult;\r\n          }\r\n\r\n          resultsList.push(<td key={Math.random()}>{myResult2}</td>);\r\n        }\r\n        listResults.push(<tr key={Math.random()}>{resultsList}</tr>);\r\n      }\r\n      return <tbody className=\"results-tbody\">{listResults}</tbody>;\r\n    }else{\r\n      return <tbody><tr key={Math.random()}><td key={Math.random()}>Results not found</td></tr></tbody>\r\n    }\r\n  }\r\n\r\n  sortBodies(myItem, mySortingOption) {\r\n    var option = myItem;\r\n    var sortingOption = mySortingOption; //increase or decrease\r\n    var bodies1 = this.state.results;\r\n    var bodies2 = bodies1;\r\n    var item1;\r\n    var item2;\r\n    //var smallIndex;\r\n    //var bigItemIndex = 0;\r\n    for (var i = 0; i < bodies1.length; i++) {\r\n      var smallIndex = i;\r\n      for (var j = i + 1; j < bodies1.length; j++) {\r\n        if(bodies2[smallIndex][option] == null || bodies2[j][option] == null){\r\n          item1 = '0';\r\n          item2 = '0';\r\n          //break\r\n        }\r\n        else if (typeof bodies2[smallIndex][option] === 'string' && bodies2[smallIndex][option].length < 10) {\r\n          /*Perform Selection Sort algorithm to sort items by increasing and reverse it to sort items by decreasing*/\r\n          item1 = bodies2[smallIndex][option].charAt(0);\r\n          item2 = bodies2[j][option].charAt(0);\r\n        }else if (Object.keys(bodies2[smallIndex][option]).length > 0 && Object.keys(bodies2[j][option]).length > 0) {\r\n          var keys1 = [];\r\n          var keys2 = [];\r\n          for(var prop1 in bodies2[smallIndex][option]){\r\n            keys1.push(bodies2[smallIndex][option][prop1])\r\n          }\r\n          for(var prop2 in bodies2[j][option]){\r\n            keys2.push(bodies2[j][option][prop2])\r\n          }\r\n          item1 = keys1.join();\r\n          item2 = keys2.join();\r\n        } else {\r\n          item1 = bodies2[smallIndex][option];\r\n          item2 = bodies2[j][option];\r\n        }\r\n\r\n        if (sortingOption === 'increase') {\r\n          if (item2 < item1) {\r\n            smallIndex = j;\r\n          }\r\n        }\r\n        if (sortingOption === 'decrease') {\r\n          if (item2 > item1) {\r\n            smallIndex = j;\r\n          }\r\n        }\r\n      }\r\n      var temp = bodies2[i];\r\n      bodies2[i] = bodies2[smallIndex];\r\n      bodies2[smallIndex] = temp;\r\n    }\r\n    this.setState({results: bodies2}, () => console.log(this.state.results));\r\n  }\r\n\r\n  //successful\r\n  convertToText(option){\r\n    var result = this.state.results;\r\n    var textArr = [];\r\n    //console.log(json)\r\n    for(var property in result[0]) {\r\n      textArr.push(property);\r\n    }\r\n    for (var i = 0; i < result.length; i++) {\r\n      var textRow = [];\r\n      for (var property1 in result[i]) {\r\n        var myResult = [];\r\n        if (Array.isArray(result[i][property1])) {\r\n          var myResult1 = [];\r\n          for (var property2 in result[i][property1]) {\r\n            var el = JSON.stringify(result[i][property1][property2]);\r\n            myResult1.push(el);\r\n          }\r\n          myResult = myResult1\r\n            .join(`\\n`)\r\n            .replaceAll('{', '')\r\n            .replaceAll('}', '')\r\n            .replaceAll('\"', ' ')\r\n            .replaceAll(',', '\\n')\r\n            .replaceAll('_', ' ');\r\n        } else if (\r\n          Array.isArray(result[i][property1]) === false &&\r\n          result[i][property1] !== null &&\r\n          result[i][property1] !== ''\r\n        ) {\r\n          var myResult3 = String(JSON.stringify(result[i][property1]));\r\n          myResult = myResult3\r\n            .replaceAll('\"', ' ')\r\n            .replaceAll('{', '')\r\n            .replaceAll('}', '');\r\n        } else if (\r\n          result[i][property1] === null ||\r\n          result[i][property1] === 'undefined' ||\r\n          result[i][property1] === ''\r\n        ) {\r\n          myResult = '---';\r\n        }\r\n        textRow.push(myResult);\r\n      }\r\n      textArr.push(textRow.join(','))\r\n    }    \r\n    var text = textArr.join('\\n')\r\n    console.log(text)\r\n\r\n    //var encodedUri = encodeURI(text);\r\nvar link = document.createElement(\"a\");\r\nif(option === 'csv'){\r\n  link.setAttribute(\"href\", 'data:text/csv;charset=utf-8,'+encodeURI(text));\r\nlink.setAttribute(\"download\", \"data_csv.csv\");\r\n}else{\r\n  link.setAttribute(\"href\", 'data:text/plain;charset=utf-8,'+encodeURI(text));\r\nlink.setAttribute(\"download\", \"data_text.txt\");\r\n}\r\nlink.style.display='none'\r\ndocument.body.appendChild(link); // Required for FF\r\nlink.click(); \r\ndocument.body.removeChild(link)\r\n  }\r\n\r\n  search(myProperty){\r\n    var property = myProperty;\r\n    var query = document.getElementById(property).value;\r\n    console.log(property + \"\\n\"+query)\r\n    var bodies1 = this.state.originalResults;\r\n    //var bodies2 = bodies1;\r\n    var searchResultsList = [];\r\n    //var searchResultsDisplay = [];\r\n    for (var i = 0; i < bodies1.length; i++) {\r\n      if(bodies1[i][property]){\r\n          var myResult = [];\r\n          if (Array.isArray(bodies1[i][property])) {\r\n            var myResult1 = [];\r\n            for (var property2 in bodies1[i][property]) {\r\n              var el = JSON.stringify(bodies1[i][property][property2]);\r\n              myResult1.push(el);\r\n            }\r\n            myResult = myResult1\r\n              .join(`\\n`)\r\n              .replaceAll('{', '')\r\n              .replaceAll('}', '')\r\n              .replaceAll('\"', ' ')\r\n              .replaceAll(',', '\\n')\r\n              .replaceAll('_', ' ');\r\n          } else if (\r\n            Array.isArray(bodies1[i][property]) === false &&\r\n            bodies1[i][property] !== null &&\r\n            bodies1[i][property] !== ''\r\n          ) {\r\n            var myResult3 = String(JSON.stringify(bodies1[i][property]));\r\n            myResult = myResult3\r\n              .replaceAll('\"', ' ')\r\n              .replaceAll('{', '')\r\n              .replaceAll('}', '');\r\n          } else if (\r\n            bodies1[i][property] === null ||\r\n            bodies1[i][property] === 'undefined' ||\r\n            bodies1[i][property] === ''\r\n          ) {\r\n            myResult = '---';\r\n          }\r\n      if(bodies1[i][property] === query || myResult.includes(query))\r\n      {\r\n        searchResultsList.push(bodies1[i])\r\n      }\r\n    }\r\n    console.log(searchResultsList)\r\n    if(searchResultsList.length > 0){\r\n      this.setState({results: searchResultsList}, () => console.log(this.state.results));\r\n    }else{\r\n      document.getElementById(`${property+'err'}`).innerHTML = `<p className=\"search-error-msg\">No results found.</p>`\r\n    }\r\n  }\r\n}\r\n\r\n  refresh(){\r\n    this.setState({results: this.state.originalResults}, () => console.log(this.state.results));\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"display-results\">\r\n        <h2>Results</h2>\r\n        <div className=\"results-extra\">\r\n          <p>Download table as a file:</p>\r\n        <button className=\"button-csv\" onClick={() => this.convertToText(\"csv\")}><i className=\"fas fa-file-download\"></i> CSV (.csv) </button>\r\n        <button className=\"button-text\" onClick={() => this.convertToText(\"text\")}><i className=\"fas fa-file-download\"></i> Plain Text (.txt) </button>\r\n        <button onClick={()=> this.refresh()}> Reload\r\n         <i className=\"fas fa-redo\"></i>\r\n        </button>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"table-wrapper\">\r\n        <table className=\"table\">\r\n        <thead className=\"table-heading\">{this.makeHeadings()}</thead>\r\n        {this.makeResults()}\r\n        </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DisplayResults;\r\n\r\n/*Get results:\r\n1) Find an array of objects in that big object\r\n2) Parse through the array\r\n*/\r\n/*<thead class=\"heading\">{this.makeHeadings()}</thead>\r\n          {this.makeResults()}*/","import './App.css';\nimport React, { Component } from 'react';\nimport DisplayResults from './components/DisplayResults.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null,\n    };\n  }\n\n  /*1) Gets url from a user input \n    2) Makes a fetch call with that link to get JSON response \n    3) Calls another function to find results in that response \n    4) Stores that value inside \"this.state.results\"*/\n  async getResults() {\n    this.setState({ results: null }, () =>\n      console.log('null results :( ' + this.state.results)\n    );\n    var apiUrl = document.querySelector(`.input-link`).value;\n    console.log('api url ' + apiUrl);\n    await fetch(apiUrl)\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((result) => {\n        console.log('res ' + result);\n        var myResult = this.findResultsArray(result);\n        this.setState({ results: myResult }, () =>\n          console.log(this.state.results)\n        );\n      })\n      .catch((error) => {\n        console.log('Error: ' + error);\n        alert(\n          'No results found. Check the URL and make sure that response is in JSON format or try again later.'\n        );\n        this.setState({ results: null }, () =>\n          console.log('null results :( ' + this.state.results)\n        );\n      });\n  }\n\n  /*1) Inputs the JSON response returned from the \"fetch\" call\n    2) Finds the results array\n    3) Returns it back to the \"getResults\" function*/\n  findResultsArray(myObject) {\n    var bigObject = myObject;\n    console.log(bigObject);\n    //Two scenarios for a JSON response returned:\n    //Scenario 1: response returned is already an array so we will use it\n    if (Array.isArray(bigObject) === true) {\n      console.log(bigObject);\n      return bigObject;\n    }\n    //Scenario 2: response returned is an object containing keys and values\n    else if (typeof bigObject === 'object') {\n      /* Now the response can either contain A) the results as keys and values of the object itself, or B) the results stored in an array of one of the values. \n      Assuming the result items are the the longest we can find the results the following way: \n    1) Count the number of properties the object has.\n    2) Count the number of the longest array items the object has.\n    3) Properties > array items, then the results are properties. If otherwise, the results is the longest array. \n     */\n      var propCount = 0;\n      for (var property in bigObject) {\n        propCount++;\n      }\n      var biggestArrayLength = 0;\n      var biggestArray1 = [];\n      for (var property1 in bigObject) {\n        var thisArray1 = [];\n        if (Array.isArray(bigObject[property1]) === true) {\n          thisArray1 = bigObject[property1];\n          if (thisArray1.length > biggestArray1.length) {\n            biggestArray1 = thisArray1;\n          }\n        }\n      }\n      biggestArrayLength = biggestArray1.length;\n      if (propCount > biggestArrayLength) {\n        var myArray1 = [];\n        myArray1[0] = bigObject;\n        return myArray1;\n      } else {\n        var thisArray = [];\n        var biggestArray = [];\n        //if the thing is an object with keys convert it to array\n        for (var property2 in bigObject) {\n          if (Array.isArray(bigObject[property2]) === true) {\n            thisArray = bigObject[property2];\n            if (thisArray.length > biggestArray.length) {\n              console.log(thisArray);\n              biggestArray = thisArray;\n            }\n          }\n        }\n        console.log(biggestArray);\n        return biggestArray;\n      }\n    }\n  }\n\n  /*When a button is pressed next to one of the links, the text is copied to clipboard so then the user can paste it in the text input*/\n  copyLinkText(el) {\n    var textArea = document.getElementById(el);\n    textArea.select();\n    document.execCommand('copy');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"frame\">\n          <div className=\"description\">\n            <h1>API Data to Table Converter</h1>\n            <h4>Convert Data from an API Request to Table or Text</h4>\n            <p>\n              JSON (JavaScript Object Notation) is a popular data format that is easy to transfer and process. It is commonly used for transporting data from APIs (Application Programming Interface).\n            </p>\n            <p>\n              Sometimes parsing the received JSON data can get complicated. This tool makes\n              processing data from API requests easier. It first makes an API\n              call. If the request is successful, the data gets parsed and\n              displayed as a table. Users can then search and sort the data table as\n              well as download the table in plain text or CSV format.\n            </p>\n            <p>\n              For a successful API call please ensure that the API is either\n              public or it includes an API key if necessary, and that it returns\n              data in JSON format with properties and values. Please wait a few\n              seconds for the results to load.\n            </p>\n            <p>Copy and paste an API request below:</p>\n            <h4>Try these requests:</h4>\n            <ol>\n              <li>\n                <textarea\n                  cols=\"50\"\n                  rows=\"2\"\n                  readOnly\n                  value=\"https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=DEMO_KEY\"\n                  id=\"link1\"\n                ></textarea>\n                <button onClick={() => this.copyLinkText('link1')}>Copy</button>\n              </li>\n              <li>\n                <textarea\n                  cols=\"50\"\n                  rows=\"2\"\n                  readOnly\n                  value=\"https://api.nasa.gov/DONKI/CME?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY\"\n                  id=\"link2\"\n                ></textarea>\n                <button onClick={() => this.copyLinkText('link2')}>Copy</button>\n              </li>\n              <li>\n                <textarea\n                  cols=\"50\"\n                  rows=\"2\"\n                  readOnly\n                  value=\"https://api.le-systeme-solaire.net/rest/bodies/\"\n                  id=\"link3\"\n                ></textarea>\n                <button onClick={() => this.copyLinkText('link3')}>Copy</button>\n              </li>\n            </ol>\n            <div className=\"search-form\">\n              <form>\n                <input type=\"text\" className=\"input-link\"></input>\n              </form>\n              <button onClick={() => this.getResults()}>\n                <i className=\"fas fa-search\"></i>\n              </button>\n            </div>\n          </div>\n          <div className=\"results\">\n            {this.state.results !== null && (\n              <DisplayResults results={this.state.results}></DisplayResults>\n            )}\n          </div>\n          <footer>\n            <hr></hr>\n            <p>\n              <i className=\"fab fa-github\"></i> GitHub:{' '}\n            </p>\n            <p>\n              Made with{' '}\n              <a href=\"https://reactjs.org/\">\n                React.js<i className=\"fab fa-react\"></i>\n              </a>\n            </p>\n            <p>By A. A.</p>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n/*{this.state.option === 'option' && this.state.isOn === true && (<DisplayResults results={this.state.results}></DisplayResults>)}*/\n\n/*\nAlgorithm:\n1) Convert items to JSOn format\n2) Find the array or convert it to an array\n3) Pass it to the display\n4) Optional: made a CSV option or an Excel\n\n\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}