{"version":3,"sources":["components/DailyImg.js","components/SpaceWeather.js","components/SolarSystemSearch.js","components/Asteroids.js","components/Exoplanets.js","App.js","reportWebVitals.js","index.js"],"names":["DailyImg","result","results","title","explanation","date","src","url","alt","SpaceWeather","headingsList","listHeadings","listResults","console","log","property","push","map","item","Math","random","i","length","resultsList","property1","myResult","String","Array","isArray","join","SolarSystemSearch","objType","isPlanet","aroundPlanet","imgUrl1","imgUrl2","imgUrl3","listItems","value","englishName","mass","massValue","massExponent","vol","volValue","volExponent","density","axialTilt","inclination","eccentricity","semimajorAxis","flattening","sideralOrbit","sideralRotation","aphelion","perihelion","escape","gravity","imageList","results2","hits","previewURL","className","Asteroids","near_earth_objects","unshift","myResult2","myResult1","property2","el","JSON","stringify","replaceAll","triggerWord","substr","trigger","Exoplanets","myResults","App","props","state","isOn","option","imgResults","myOption","apiUrl","apiUrl2","query","document","querySelector","this","fetchResults","setState","url1","url2","gotResults","fetch","then","response","json","catch","error","getResults","href","onClick","toggle","type","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.338be457.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DailyImg = ({results}) => {\r\n  //works\r\n  const result = results;\r\n  //console.log(myResults);\r\n  \r\n  /*var imageContent = `<p>${result.title}</p>\r\n  <p>${result.explanation}</p>\r\n  <p>${result.date}</p>\r\n  <img src=${result.url} alt=\"Daily NASA Image\"></img>`*/\r\n  \r\n    return (\r\n      <div>\r\n        <p>{result.title}</p>\r\n  <p>{result.explanation}</p>\r\n  <p>{result.date}</p>\r\n  <img src={result.url} alt=\"Daily NASA\"></img>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default DailyImg;\r\n/*import React from 'react';\r\n\r\nclass DailyImg extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        isOn: false\r\n    };\r\n  }\r\n\r\ntoggleButton(){\r\n    if(this.state.isOn === true){\r\n        this.setState({isOn: false},() => console.log(this.state.isOn));\r\n        this.hideImage();\r\n    }\r\n    else{\r\n        this.setState({isOn: true},() => console.log((this.state.isOn)));\r\n        this.showImage();\r\n    }\r\n}\r\n  showImage() {\r\n    var imageSection = document.querySelector('.img-section');\r\n    imageSection.innerHTML = ``;\r\n    fetch('https://api.nasa.gov/planetary/apod?api_key=9lk2oaahnMAHNahXmIPbubEtXLHbspNRYVNKRag7')\r\n      .then((response) => {\r\n       return response.json();\r\n      })\r\n      .then((result) => {\r\n        //console.log(result);\r\n        var imageContent = `<p>${result.title}</p>\r\n        <p>${result.explanation}</p>\r\n        <p>${result.date}</p>\r\n        <img src=${result.url} alt=\"Daily NASA Image\"></img>`;\r\n        imageSection.insertAdjacentHTML('beforeend', imageContent);\r\n      })\r\n      .catch((error) =>{\r\n        console.log(error);\r\n        var errorMsg = `<p>Error displaying image, try again later.</p>`;\r\n        imageSection.insertAdjacentHTML('beforeend', errorMsg);\r\n      });\r\n  }\r\n\r\n  hideImage(){\r\n    var imageSection = document.querySelector('.img-section');\r\n    imageSection.innerHTML = ``;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"img-button\" onClick={ () => this.toggleButton()}>\r\n            X\r\n          </button>\r\n          <div className=\"img-section\">\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyImg; */","import React from 'react';\r\n\r\nconst SpaceWeather = ({results}) => {\r\n  var result = results;\r\n  var headingsList = [];\r\n  var listHeadings = [];\r\n  var listResults = [];\r\n  console.log(result);\r\n  if(result){\r\n    for(var property in result[0]){\r\n      headingsList.push(property)\r\n    }\r\n    listHeadings = headingsList.map((item) => (\r\n      <th key={Math.random()}>{item}</th>\r\n    ));\r\n    //console.log(headingsList)\r\n\r\n    for(var i = 0; i < result.length; i++){\r\n      //object: console.log(results[i])\r\n      var resultsList = [];\r\n      for(var property1 in result[i]){\r\n        var myResult;\r\n        if(result[i][property1]){\r\n          myResult = String(result[i][property1])\r\n        }else{\r\n          myResult = '---'\r\n        }\r\n        if(Array.isArray(result[i][property1])){\r\n          console.log('issa array!')\r\n          myResult = result[i][property1].join()\r\n        }\r\n        resultsList.push(<td key={Math.random()}>{myResult}</td>)\r\n      }\r\n      listResults.push(\r\n        <tr key={Math.random()}>{resultsList}</tr>\r\n      )\r\n    }\r\n\r\n    //console.log(listResults)\r\n  }\r\n  \r\n    return (\r\n      <div>\r\n      <p>results here</p>\r\n       <table>\r\n         <thead>\r\n           <tr>\r\n           {listHeadings}\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n           {listResults}\r\n         </tbody>\r\n       </table>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SpaceWeather;\r\n/*\r\n//var query = document.querySelector('.img-lib-input-field').value;\r\n    var applicationId = 'dd297681-c8fc-4994-a38d-7136346760d8';\r\n    var applicationSecret =\r\n      '36c45522ed9ddc0716fe656fee5bff5488f44011b47a7ca558457ebbfe7ea800805a9f7f4e10dd9d01ce807ab5e09aa4faff2691d3b8d6365a474479f0c32df18fc7640f6f73edb9f167d264b76c9364ffd7d0c9267287c1477c20b719358ae724ab28045c1d2c67ed5222a7c8d5e73e';\r\n\r\n    const hash = btoa(`${applicationId}:${applicationSecret}`);\r\n\r\n    const url = 'https://api.astronomyapi.com/api/v2/bodies';\r\n\r\n    fetch(url, {\r\n        headers: {\r\n            Authorization: `Basic <${hash}>`,\r\n          }\r\n    })\r\n      .then((response) => {\r\n        console.log('there is some response wow');\r\n        return response;\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error: ' + error);\r\n      });\r\n      */\r\n     /*<form>\r\n          <input className=\"img-lib-input-field\"></input>\r\n          <button className=\"img-lib-search-button\" onClick={this.showImageLib}>\r\n            Search\r\n          </button>\r\n        </form>\r\n        <div className=\"img-lib-section\"></div>*/\r\n/*\r\nconst myResults = results;\r\n  console.log(myResults);\r\n  console.log(\"img lib\");\r\n  console.log(myResults[0].eventTime);\r\n  \r\n  \r\n    return (\r\n      <div>\r\n        <p>Results: </p>\r\n        <div className=\"img-lib-section\">\r\n      <p>{`${myResults[0].eventTime}`}</p>\r\n          </div>\r\n      </div>\r\n    );\r\n */\r\n\r\n /*<div>\r\n        <label for=\"start\">From:</label>\r\n<input type=\"date\"\r\n       min=\"2015-01-01\" max=\"2022-01-01\"></input>\r\n       <label for=\"start\">To:</label>\r\n       <input type=\"date\"\r\n       min=\"2012-01-01\" max=\"2022-01-01\"></input>\r\n       </div> */\r\n\r\n       /*for(var i = 0; i < result.length; i++){\r\n      //console.log(result[i]) //works\r\n      //headingsList is undefined\r\n      for(var j = 0; j < headingsList.length; j++){\r\n        for(var property1 in result[0]) {\r\n          if(result[i][property1]){\r\n            //this below works\r\n          //console.log(`${i}  ${result[i][property1]}`)\r\n          /*resultsList.push(<td key={Math.random()}>{String(result[i][property1])}</td>)\r\n          resultsList.push(String(result[i][property1]))\r\n          }\r\n          else{\r\n            resultsList.push(`---`)\r\n            /*resultsList.push(<td key={Math.random()}>---</td>)\r\n          }\r\n          //resultsList[i].push({value: `${result[0][property1]}`})\r\n        }\r\n      }\r\n    } \r\n    \r\n    \r\n    //iterating trough each object in the array\r\n    /*for(var i = 0; i < result.length; i++){\r\n\r\n      for(var j = 0; j < headingsList.length; j++){\r\n        for(var property1 in result[0]) {\r\n          if(result[i][property1]){\r\n          resultsList.push(<td key={Math.random()}>{result[i][property1]}</td>)\r\n          //resultsList.push(String(result[i][property1]))\r\n          }\r\n          else{\r\n            //resultsList.push(`---`)\r\n            resultsList.push(<td key={Math.random()}>---</td>)\r\n          }\r\n          //resultsList[i].push({value: `${result[0][property1]}`})\r\n        }\r\n      }\r\n    }\r\n    console.log(resultsList)\r\n    //console.log(headingsList.length)\r\n\r\n    //do edits here: array for each number of items of headings\r\n    for(var k = 0; k < resultsList.length; k++){\r\n      var c = k + 1;\r\n      var littleArray = resultsList.slice(c, k+=headingsList.length);\r\n      //console.log(\"la \" + littleArray)\r\n    }\r\n\r\n  /*listResults = resultsList.map((item) => (\r\n      <tr key={Math.random()}>{item}</tr>\r\n    ));*/","import React from 'react';\r\n\r\nconst SolarSystemSearch = ({ results }) => {\r\n  var result = results;\r\n  var resultsList = [];\r\n  if (result) {\r\n\r\n    //TEXT CONTENT\r\n    var objType;\r\n    if (result.isPlanet === false && result.aroundPlanet === null) {\r\n      objType = 'star';\r\n    } else if (result.isPlanet === true) {\r\n      objType = 'planet';\r\n    } else {\r\n      objType = 'moon';\r\n    }\r\n    console.log(objType);\r\n\r\n    resultsList = [\r\n      { value: `Name: ${result.englishName}` },\r\n      { value: `Type: ${objType}` },\r\n      {\r\n        value: `Mass: ${result.mass.massValue}*10^${result.mass.massExponent} kg`,\r\n      },\r\n      {\r\n        value: `Volume: ${result.vol.volValue}*10^${result.vol.volExponent} km^3`,\r\n      },\r\n      { value: `Density: ${result.density} g/cm^3` },\r\n      { value: `---` },\r\n      { value: `Axial Tilt: ${result.axialTilt}°` },\r\n      { value: `Inclination: ${result.inclination}°` },\r\n      { value: `---` },\r\n      {\r\n        value: `Radius: ${result.vol.volValue}*10^${result.vol.volExponent} km^3`,\r\n      },\r\n      { value: `Eccentricity: ${result.eccentricity}` },\r\n      { value: `Semimajor Axis: ${result.semimajorAxis} km` },\r\n      { value: `Ellipticity/Flattening: ${result.flattening}` },\r\n      { value: `---` },\r\n      { value: `Sideral Orbit: ${result.sideralOrbit} days` },\r\n      { value: `Sideral Rotation (period): ${result.sideralRotation} hours` },\r\n      { value: `---` },\r\n      { value: `Aphellion: ${result.aphelion} km` },\r\n      { value: `Perihelion: ${result.perihelion} km` },\r\n      { value: `---` },\r\n      { value: `Escape Velocity: ${result.escape} m/s` },\r\n      { value: `Gravity (surface): ${result.gravity} m/s^2` },\r\n    ];\r\n\r\n    var listItems = resultsList.map((item) => (\r\n      <li key={Math.random()}>{item.value}</li>\r\n    ));\r\n\r\n    //IMAGE CONTENT\r\n    var imageList= '';\r\n      if(result.results2 && result.results2.hits){\r\n        var imgUrl1, imgUrl2, imgUrl3;\r\n        if(result.results2.hits[0]) imgUrl1 = result.results2.hits[0].previewURL;\r\n        if(result.results2.hits[1]) imgUrl2 = result.results2.hits[1].previewURL;\r\n        if(result.results2.hits[2]) imgUrl3 = result.results2.hits[2].previewURL; \r\n        \r\n        imageList = <ul>\r\n        {imgUrl1 && (<img key={Math.random()} src={imgUrl1} alt={String(result.englishName)}></img>)}\r\n        {imgUrl2 && (<img key={Math.random()} src={imgUrl2} alt={String(result.englishName)}></img>)}\r\n        {imgUrl3 && (<img key={Math.random()} src={imgUrl3} alt={String(result.englishName)}></img>)}\r\n        </ul>\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Results: </p>\r\n      <div className=\"results-section\">\r\n        <div className=\"col-1\"><ul>{listItems}</ul></div>\r\n        <div className=\"col-2\">{imageList}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SolarSystemSearch;\r\n/* resultsContent = \r\n            <ul>\r\n            <li>Name: ${result.englishName}</li>\r\n            <li>Type: ${objType}</li>\r\n            <li>Mass: ${result.mass.massValue}*10<sup>${result.mass.massExponent}</sup> kg</li>\r\n            <li>Volume: ${result.vol.volValue}*10<sup>${result.vol.volExponent}</sup> km<sup>3</sup></li>\r\n            <li>Density: ${result.density} g/cm<sup>3</sup></li>\r\n            <br>\r\n            <li>Axial Tilt: ${result.axialTilt}&#176</li>\r\n            <li>Inclination: ${result.inclination}&#176</li>\r\n            <br>\r\n            <li>Radius: ${result.equaRadius} km</li>\r\n            <li>Eccentricity: ${result.eccentricity}</li>\r\n            <li>Semimajor Axis: ${result.semimajorAxis} km</li>\r\n            <li>Ellipticity/Flattening: ${result.flattening}</li>\r\n            <br>\r\n            <li>Sideral Orbit: ${result.sideralOrbit} days</li>\r\n            <li>Sideral Rotation (period): ${result.sideralRotation} hours</li>\r\n            <br>\r\n            <li>Aphellion: ${result.aphelion} km</li>\r\n            <li>Perihelion: ${result.perihelion} km</li>\r\n            <br>\r\n            <li>Escape Velocity: ${result.escape} m/s</li>\r\n            <li>Gravity (surface): ${result.gravity} m/s<sup>2</sup></li>\r\n            </ul>;\r\n            <img src={imgUrl2} alt={String(result.englishName)}></img>\r\n        <img src={imgUrl3} alt={String(result.englishName)}></img>*/\r\n","import React from 'react';\r\nimport Collapsible from 'react-collapsible';\r\n\r\n\r\nconst Asteroids = ({results}) => {\r\n  //works\r\n  const result = results.near_earth_objects;\r\n  var headingsList = [];\r\n  var listHeadings = [];\r\n  var listResults = [];\r\n  if(result){\r\n  console.log(result)\r\n  for(var property in result[0]){\r\n    headingsList.push(property)\r\n  }\r\n  headingsList.unshift('#')\r\n  listHeadings = headingsList.map((item) => (\r\n    <th key={Math.random()}>{item}</th>\r\n  ));\r\n  //console.log(headingsList)\r\n  for(var i = 0; i < result.length; i++){\r\n    var resultsList = [];\r\n    resultsList.push(<td key={Math.random()}>{i+1}</td>)\r\n    for(var property1 in result[i]){\r\n      var myResult;\r\n      if(Array.isArray(result[i][property1])){\r\n        var myResult1 = [];\r\n        //convert the thing to javascript object\r\n        //convert object into string\r\n        for(var property2 in result[i][property1]){\r\n          var el = JSON.stringify(result[i][property1][property2])\r\n          myResult1.push(el)\r\n        }\r\n        myResult = myResult1.join(`\\n`).replaceAll('{','').replaceAll('}','').replaceAll('\"', ' ').replaceAll(',', '\\n').replaceAll('_', ' ')\r\n        //console.log(myResult)\r\n      }\r\n      else if(Array.isArray(result[i][property1])===false){\r\n        var myResult3 = String(JSON.stringify(result[i][property1]))\r\n        myResult = myResult3.replaceAll('\"',' ').replaceAll('{','').replaceAll('}','')\r\n        //console.log(result[i][property1])     \r\n      }else{\r\n        myResult = '---'\r\n      }\r\n      var end = myResult.length;\r\n      //var triggerWord;\r\n      var myResult2;\r\n      if(end > 100){\r\n        var triggerWord = myResult.substr(0,15)+\"...\"\r\n        //console.log(triggerWord)\r\n         myResult2 = <Collapsible className=\"collapsible\" trigger={triggerWord}>{myResult}</Collapsible>\r\n        }\r\n      else{ \r\n        myResult2 = myResult;\r\n      }\r\n      resultsList.push(<td key={Math.random()}>{myResult2}</td>)\r\n    }\r\n\r\n    listResults.push(\r\n      <tr key={Math.random()}>{resultsList}</tr>\r\n    )\r\n  }\r\n\r\n // console.log(listResults)\r\n  \r\n  }\r\n    return (\r\n      <div>\r\n        <p>Results</p>\r\n        <table>\r\n         <thead>\r\n           <tr>\r\n           {listHeadings}\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n         {listResults}\r\n         </tbody>\r\n       </table>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Asteroids;","import React from 'react';\r\n\r\nconst Exoplanets = ({results}) => {\r\n  //works\r\n  const myResults = results;\r\n  console.log(myResults);\r\n  \r\n    return (\r\n      <div>\r\n        <p>Space Weather Results: </p>\r\n        <div className=\"img-results-section\">\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Exoplanets;","import './App.css';\nimport React, { Component } from 'react';\n//import SearchResults from './components/SearchResults.js';\nimport DailyImg from './components/DailyImg.js';\nimport SpaceWeather from './components/SpaceWeather.js';\nimport SolarSystemSearch from './components/SolarSystemSearch.js';\nimport Asteroids from './components/Asteroids.js';\nimport Exoplanets from './components/Exoplanets.js';\n\n//import ImgResults from './components/SolarSystemSearch.js';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOn: false,\n        option: '',\n        results: {},\n        imgResults: {}\n    };\n  }\n  \n  getResults(myOption){\n    if(myOption!==null){\n    var apiUrl, apiUrl2;\n    var query;\n    \n    if(myOption === 'Daily NASA Image'){\n      apiUrl = `https://api.nasa.gov/planetary/apod?api_key=9lk2oaahnMAHNahXmIPbubEtXLHbspNRYVNKRag7`\n    }\n    if(myOption === 'Solar System'){\n      query = document.querySelector('.ss-input-field').value;\n      apiUrl = `https://api.le-systeme-solaire.net/rest/bodies/${query}`\n      apiUrl2 = `https://pixabay.com/api/?key=19641110-089431fe9f9b59580a5cbeae5&q=${query}+planet&category=science&image_type=photo`\n    }\n    if(myOption === 'Space Weather'){\n      query = document.querySelector('.sw-options').value\n      apiUrl = `https://api.nasa.gov/DONKI/${query}?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=9lk2oaahnMAHNahXmIPbubEtXLHbspNRYVNKRag7`\n    }\n    if(myOption === 'Asteroids'){\n      apiUrl = `https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=9lk2oaahnMAHNahXmIPbubEtXLHbspNRYVNKRag7`\n    }\n    if(myOption === 'Exoplanets'){\n      apiUrl = `https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=9lk2oaahnMAHNahXmIPbubEtXLHbspNRYVNKRag7`\n    }\n    this.fetchResults(apiUrl, apiUrl2, myOption)\n    }\n    else if(myOption === null){\n      this.setState({option: myOption}, () => console.log(this.state.option));\n    }\n  }\n\n  async fetchResults(url1, url2, myOption){\n    var gotResults = false;\n    await fetch(url1)\n      .then((response) => {\n        return response.json();\n      })\n      .then((result) => {\n        //console.log(result);\n        gotResults = true;\n        this.setState({results: result},() => console.log(this.state.results));\n      })\n      .catch((error) => {\n        console.log('Error: ' + error);\n        this.setState({results: null},() => console.log(this.state.results));\n      });\n    \n      if(url2 && gotResults === true){\n        await fetch(url2)\n      .then((response) => {\n        return response.json();\n      })\n      .then((result) => {\n        this.state.results.results2 = result;\n        console.log(this.state.results)\n      })\n      .catch((error) => {\n        console.log('Error: ' + error);\n      });\n      }\n      this.setState({option: myOption}, () => console.log(this.state.option));\n  }\n    //\n  toggle(myOption){\n      if(this.state.isOn === true){\n        this.setState({isOn: false},() => console.log(\"isOn: \" + this.state.isOn));\n        this.setState({option: null}, () => console.log(this.state.option));\n        //hide component\n    }\n    else{\n        this.setState({isOn: true},() => console.log(\"isOn: \" + this.state.isOn));\n        //show component\n        this.getResults(myOption)\n    }\n    }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"frame\">\n        <h1>Astro App</h1>\n        <p className=\"info\">APIs used: The Solar System Open Data - <a href=\"https://api.le-systeme-solaire.net/en/\">https://api.le-systeme-solaire.net/en/</a></p>\n        <p>Credit goes to the original developers.</p>\n        <div className=\"menu-table\">\n          <h2>Daily NASA Image</h2>\n          <h2>Search Space Weather</h2>\n          <h2>Search Solar System Objects</h2>\n          <h2>Search Asteroids</h2>\n          <h2>Search Exoplanets</h2>\n          <button onClick={() => this.toggle('Daily NASA Image')}>View</button>\n          <div className=\"search-form\">\n          <form>\n<select className=\"sw-options\">\n<option>Select space weather occurance</option>\n  <option value=\"CME\">Coronal Mass Ejection (CME)</option>\n  <option value=\"CMEAnalysis\">Coronal Mass Ejection Analysis (CME)</option>\n  <option value=\"GST\">Geomagnetic Storm (GST)</option>\n  <option value=\"IPS\">Interplanetary Shock (IPS)</option>\n\n  <option value=\"FLR\">Solar Flare (FLR)</option>\n  <option value=\"SEP\">Solar Energetic Particle (SEP)</option>\n  <option value=\"MPC\">Magnetopause Crossing (MPC)</option>\n  <option value=\"RBE\">Radiation Belt Enhancement (RBE)</option>\n  <option value=\"HSS\">Hight Speed Stream (HSS)</option>\n  <option value=\"WSAEnlilSimulations\">WSA+EnlilSimulation</option>\n  <option value=\"notifications\">Notifications</option>\n</select>\n        <button type=\"button\" onClick={() => this.toggle('Space Weather')}>Search</button>\n        </form>\n        </div>\n          <div className=\"search-form\">\n        <form>\n          <input className=\"ss-input-field\"></input>\n          <button type=\"button\"  onClick={() => this.toggle('Solar System')}>\n            Search\n          </button>\n        </form>\n        </div>\n        <button onClick={() => this.toggle('Asteroids')}>View</button>\n        <button onClick={() => this.toggle('Exoplanets')}>View</button>\n        </div>\n        <div className=\"results\">\n        {this.state.option === 'Daily NASA Image' && this.state.isOn === true && (<DailyImg results={this.state.results}></DailyImg>)}\n        {this.state.option === 'Space Weather' && this.state.isOn === true && (<SpaceWeather results={this.state.results}></SpaceWeather>)}\n        {this.state.option === 'Solar System' && this.state.isOn === true && (<SolarSystemSearch results={this.state.results}></SolarSystemSearch>)}\n        {this.state.option === 'Asteroids' && this.state.isOn === true && (<Asteroids results={this.state.results}></Asteroids>)}\n        {this.state.option === 'Exoplanets' && this.state.isOn === true && (<Exoplanets results={this.state.results}></Exoplanets>)}\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}