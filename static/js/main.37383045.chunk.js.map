{"version":3,"sources":["components/DisplayResults.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayResults","props","state","results","result","this","console","log","listHeadings","headingsList","property","push","unshift","map","item","className","onClick","sortBodies","Math","random","listResults","i","length","resultsList","property1","myResult","myResult2","Array","isArray","myResult1","property2","el","JSON","stringify","join","replaceAll","String","triggerWord","substr","trigger","myItem","mySortingOption","item1","item2","option","sortingOption","bodies1","bodies2","smallIndex","j","charAt","Object","keys","keys1","keys2","prop1","prop2","temp","setState","makeHeadings","makeResults","Component","App","isOn","myOption","apiUrl","document","querySelector","value","fetchResults","url1","fetch","then","response","json","findResultsArray","catch","error","myObject","bigObject","biggestArray","thisArray","getResults","getElementById","select","execCommand","cols","rows","readOnly","id","copyLinkText","type","toggle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.37383045.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Collapsible from 'react-collapsible';\r\n\r\nclass  DisplayResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: this.props.results\r\n    };\r\n  }\r\n\r\n  makeHeadings() {\r\n    var result = this.state.results;\r\n    if (result) {\r\n      console.log(result)\r\n      var headingsList = [];\r\n      var listHeadings = [];\r\n      for (var property in result[0]) {\r\n        headingsList.push(property);\r\n      }\r\n      headingsList.unshift(`#`);\r\n      listHeadings = headingsList.map((item) => (\r\n        <th className=\"results-tr\" key={Math.random()}>\r\n          <div className=\"sorting-buttons\">\r\n          <p>{item}</p>\r\n          <div className=\"sorting-buttons-column\">\r\n            <button onClick={() => this.sortBodies(item, 'increase')}>\r\n              <i className=\"fas fa-chevron-up\"></i>\r\n            </button>\r\n            <button onClick={() => this.sortBodies(item, 'decrease')}>\r\n              <i className=\"fas fa-chevron-down\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        </th>\r\n      ));\r\n      return <tr>{listHeadings}</tr>;\r\n    }else{\r\n      return <tr key={Math.random()}><td key={Math.random()}>Results not found</td></tr>\r\n    }\r\n  }\r\n\r\n  makeResults() {\r\n    var result = this.state.results;\r\n    var listResults = [];\r\n    if (result) {\r\n      for (var i = 0; i < result.length; i++) {\r\n        var resultsList = [];\r\n        resultsList.push(<td key={Math.random()}>{i + 1}</td>);\r\n        for (var property1 in result[i]) {\r\n          var myResult;\r\n          if (Array.isArray(result[i][property1])) {\r\n            var myResult1 = [];\r\n            for (var property2 in result[i][property1]) {\r\n              var el = JSON.stringify(result[i][property1][property2]);\r\n              myResult1.push(el);\r\n            }\r\n            myResult = myResult1\r\n              .join(`\\n`)\r\n              .replaceAll('{', '')\r\n              .replaceAll('}', '')\r\n              .replaceAll('\"', ' ')\r\n              .replaceAll(',', '\\n')\r\n              .replaceAll('_', ' ');\r\n          } else if (\r\n            Array.isArray(result[i][property1]) === false &&\r\n            result[i][property1] !== null &&\r\n            result[i][property1] !== ''\r\n          ) {\r\n            var myResult3 = String(JSON.stringify(result[i][property1]));\r\n            myResult = myResult3\r\n              .replaceAll('\"', ' ')\r\n              .replaceAll('{', '')\r\n              .replaceAll('}', '');\r\n          } else if (\r\n            result[i][property1] === null ||\r\n            result[i][property1] === 'undefined' ||\r\n            result[i][property1] === ''\r\n          ) {\r\n            myResult = '---';\r\n          }\r\n          var end = myResult.length;\r\n          var myResult2;\r\n          if (end > 40) {\r\n            var triggerWord = myResult.substr(0, 15) + '...';\r\n            myResult2 = (\r\n              <Collapsible className=\"collapsible\" trigger={triggerWord}>\r\n                ${myResult}\r\n              </Collapsible>\r\n            );\r\n          } else {\r\n            myResult2 = myResult;\r\n          }\r\n\r\n          resultsList.push(<td key={Math.random()}>{myResult2}</td>);\r\n        }\r\n        listResults.push(<tr key={Math.random()}>{resultsList}</tr>);\r\n      }\r\n      return <tbody className=\"results-tbody\">{listResults}</tbody>;\r\n    }else{\r\n        return <tbody><tr key={Math.random()}><td key={Math.random()}>Results not found</td></tr></tbody>\r\n    }\r\n  }\r\n\r\n  sortBodies(myItem, mySortingOption) {\r\n    var option = myItem;\r\n    var sortingOption = mySortingOption; //increase or decrease\r\n    var bodies1 = this.state.results;\r\n    var bodies2 = bodies1;\r\n    var item1;\r\n    var item2;\r\n    //var smallIndex;\r\n    //var bigItemIndex = 0;\r\n    for (var i = 0; i < bodies1.length; i++) {\r\n      var smallIndex = i;\r\n      for (var j = i + 1; j < bodies1.length; j++) {\r\n        if(bodies2[smallIndex][option] == null || bodies2[j][option] == null){\r\n          item1 = '0';\r\n          item2 = '0';\r\n          //break\r\n        }\r\n        else if (typeof bodies2[smallIndex][option] === 'string' && bodies2[smallIndex][option].length < 10) {\r\n          item1 = bodies2[smallIndex][option].charAt(0);\r\n          item2 = bodies2[j][option].charAt(0);\r\n        }else if (Object.keys(bodies2[smallIndex][option]).length > 0 && Object.keys(bodies2[j][option]).length > 0) {\r\n          var keys1 = [];\r\n          var keys2 = [];\r\n          for(var prop1 in bodies2[smallIndex][option]){\r\n            keys1.push(bodies2[smallIndex][option][prop1])\r\n          }\r\n          for(var prop2 in bodies2[j][option]){\r\n            keys2.push(bodies2[j][option][prop2])\r\n          }\r\n          item1 = keys1.join();\r\n          item2 = keys2.join();\r\n        } else {\r\n          item1 = bodies2[smallIndex][option];\r\n          item2 = bodies2[j][option];\r\n        }\r\n\r\n        if (sortingOption === 'increase') {\r\n          if (item2 < item1) {\r\n            smallIndex = j;\r\n          }\r\n        }\r\n        if (sortingOption === 'decrease') {\r\n          if (item2 > item1) {\r\n            smallIndex = j;\r\n          }\r\n        }\r\n      }\r\n      var temp = bodies2[i];\r\n      bodies2[i] = bodies2[smallIndex];\r\n      bodies2[smallIndex] = temp;\r\n    }\r\n    this.setState({results: bodies2}, () => console.log(this.state.results));\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Results</p>\r\n        <button className=\"button-csv\">Download Table as CSV</button>\r\n        <table className=\"table\">\r\n        <thead className=\"table-heading\">{this.makeHeadings()}</thead>\r\n        {this.makeResults()}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DisplayResults;\r\n\r\n/*Get results:\r\n1) Find an array of objects in that big object\r\n2) Parse through the array\r\n*/\r\n/*<thead class=\"heading\">{this.makeHeadings()}</thead>\r\n          {this.makeResults()}*/","import './App.css';\nimport React, { Component } from 'react';\nimport DisplayResults from './components/DisplayResults.js';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOn: false,\n      option: '',\n      results: []\n    };\n  }\n\n  getResults(myOption){\n    if(myOption!==null){\n    var apiUrl = document.querySelector(`.input-link`).value;\n    console.log(\"api url \" + apiUrl)\n    this.fetchResults(apiUrl, myOption)\n  }\n  else if(myOption === null){\n    this.setState({option: myOption}, () => console.log(this.state.option));\n  }\n  }\n\n  async fetchResults(url1, myOption){\n    console.log(url1, myOption)\n    await fetch(url1)\n      .then((response) => {\n        //console.log(response)\n        return response.json();\n        //return response.json();\n      })\n      .then((result) => {\n        console.log(\"res \" + result);\n        var myResult = this.findResultsArray(result)\n        this.setState({results: myResult},() => console.log(this.state.results));\n      })\n      .catch((error) => {\n        console.log('Error: ' + error);\n        this.setState({results: null},() => console.log(this.state.results));\n      });\n\n      this.setState({option: myOption}, () => console.log(this.state.option));\n    }\n\n    findResultsArray(myObject){\n    var bigObject = myObject;\n    console.log(bigObject)\n    if(Array.isArray(bigObject) === true){\n      //this.setState({results: bigObject}, () => console.log(this.state.results));\n      return bigObject;\n    }else{\n      var biggestArray = [];\n      var thisArray = [];\n      for(var property in bigObject){\n        console.log(property)\n        if(Array.isArray(bigObject[property]) === true){\n          thisArray = bigObject[property];\n          console.log(thisArray)\n          if(thisArray.length > biggestArray.length){\n            biggestArray = bigObject[property];\n          }\n        }\n      }\n      return biggestArray\n    }\n  }\n\n  toggle(myOption){\n   if(this.state.isOn === true){\n      this.setState({isOn: false},() => console.log(\"isOn: \" + this.state.isOn));\n      this.setState({option: null}, () => console.log(this.state.option));\n  }\n  else{\n      //show component\n      this.setState({isOn: true},() => console.log(\"isOn: \" + this.state.isOn));\n      this.getResults(myOption)\n  }\n  }\n  \n\n  copyLinkText(el){\n    var textArea = document.getElementById(el);\n    textArea.select();\n    document.execCommand('copy');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"frame\">\n        <h1>JSON to Table</h1>\n        <h4>Easy JSON</h4>\n        <p>JSON (JavaScript Object Notation) is a popular data format that is commonly used in APIs. This tool makes processing data from API requests easier. It receives JSON data from an API request and displays it in a table, allowing searching and sorting the data as well as exporting the table into downloadable CSV and Excel format.</p>\n        <p>Copy and paste an API request below:</p>\n        <h4>Try these requests:</h4>\n        <ol>\n          <li><textarea cols=\"50\" rows=\"2\" readOnly value='https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=DEMO_KEY' id=\"link1\"></textarea><button onClick={() => this.copyLinkText('link1')}>Copy</button></li>\n          <li><textarea cols=\"50\" rows=\"2\" readOnly value='https://api.nasa.gov/DONKI/CME?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY' id=\"link2\"></textarea><button onClick={() => this.copyLinkText('link2')}>Copy</button></li>\n          <li><textarea cols=\"50\" rows=\"2\" readOnly value='https://api.le-systeme-solaire.net/rest/bodies/' id=\"link3\"></textarea><button onClick={() => this.copyLinkText('link3')}>Copy</button></li>\n        </ol>\n        <form>\n          <input type=\"text\" className=\"input-link\"></input>\n        <button onClick={() => this.toggle('option')}>Search</button>\n        </form>\n        <div className=\"results\">\n        {this.state.option === 'option' && this.state.isOn === true && (<DisplayResults results={this.state.results}></DisplayResults>)}\n        </div>\n        </div>\n        </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}